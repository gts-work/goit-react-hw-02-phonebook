{"version":3,"sources":["components/Title/Title.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["Title","title","Fiter","value","onChange","type","shortid","require","ContactForm","state","id","name","number","handleChange","e","currentTarget","console","log","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","generate","numberInputId","this","htmlFor","pattern","required","Component","ContactItem","ContactsList","contacts","map","App","filter","addContact","contact","data","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContact","Filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.670b409b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nexport default Title;\n","import React from \"react\";\n\nconst Fiter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Fiter;\n","import React, { Component } from \"react\";\n\nconst shortid = require(\"shortid\");\n\nclass ContactForm extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    // console.log(\"Form ~ e: \", e);\n    // console.log(\"Form ~ e: \", e.currentTarget);\n    const { name, value, id } = e.currentTarget;\n\n    console.log(\"Form ~ ID: \", id);\n\n    this.setState({ [name]: value, id: id });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ id: \"\", name: \"\", number: \"\" });\n  };\n\n  render() {\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactItem = ({ id, name, number }) => (\n  <tr key={id}>\n    <td>{name}</td>\n    <td>{number}</td>\n  </tr>\n);\n\nexport default ContactItem;\n","import React from \"react\";\n\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts }) => {\n  console.log(\"ContactsList ~ contacts: \", contacts);\n\n  return (\n    <div>\n      <p>Contacts</p>\n      <table>\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Phone</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\n\nimport Title from \"./components/Title\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactsList\";\n\nimport contacts from \"./data/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  addContact = (id, name, number) => {\n    const contact = { id, name, number };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  onSubmit = (data) => {\n    console.log(\"App ~ data: \", data);\n\n    const { id, name, number } = data;\n\n    console.log(\"App ~ ID: \", id);\n    console.log(\"App ~ name: \", name);\n\n    this.addContact(id, name, number);\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getVisibleContacts();\n\n    return (\n      <div>\n        <Title title=\"Phonebook\" />\n        <ContactForm onSubmit={this.onSubmit} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList contacts={visibleContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}