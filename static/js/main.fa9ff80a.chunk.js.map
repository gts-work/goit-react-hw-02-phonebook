{"version":3,"sources":["components/Phoneboock/Title.js","components/Phoneboock/Form.js","components/Phoneboock/Phoneboock.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["Title","title","shortid","require","Form","state","id","name","number","handleChange","e","currentTarget","value","console","log","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","generate","numberInputId","this","htmlFor","type","onChange","pattern","required","Component","Phoneboock","ContactItem","ContactsList","contacts","map","App","data","addContact","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAIeA,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,6BAAKA,K,OCA5BC,EAAUC,EAAQ,IAqETC,E,4MAlEbC,MAAQ,CACNC,GAAI,GACJC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GAAO,IAAD,EAGpB,EAA4BA,EAAEC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAAON,EAArB,EAAqBA,GAErBO,QAAQC,IAAI,cAAeR,GAE3B,EAAKS,UAAL,mBAAiBR,EAAOK,GAAxB,mBAAmCN,GAAnC,K,EAGFU,aAAe,SAACN,GACdA,EAAEO,iBACF,EAAKC,MAAMC,SAAS,EAAKd,OACzB,EAAKe,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAET,GAAI,GAAIC,KAAM,GAAIC,OAAQ,M,4CAG5C,WACE,IAAMa,EAAcnB,EAAQoB,WACtBC,EAAgBrB,EAAQoB,WAE9B,OACE,uBAAMH,SAAUK,KAAKR,aAArB,UACE,wBAAOS,QAASJ,EAAhB,iBAEE,uBACEK,KAAK,OACLnB,KAAK,OACLK,MAAOY,KAAKnB,MAAME,KAClBoB,SAAUH,KAAKf,aACfH,GAAIe,EACJO,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,OAIZ,wBAAOJ,QAASF,EAAhB,mBAEE,uBACEG,KAAK,MACLnB,KAAK,SACLK,MAAOY,KAAKnB,MAAMG,OAClBmB,SAAUH,KAAKf,aACfH,GAAIiB,EACJK,QAAQ,yFACR3B,MAAM,giBACN4B,UAAQ,OAIZ,wBAAQH,KAAK,SAAb,gC,GA7DWI,aCYJC,E,4JAVb,WACE,OACE,qCACE,cAAC,EAAD,CAAO9B,MAAM,eACb,cAAC,EAAD,CAAMkB,SAAUK,KAAKN,MAAMC,kB,GALVW,aCGVE,EANK,SAAC,GAAD,IAAG1B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAClB,+BACGD,EADH,IACUC,IADDF,ICeI2B,EAdM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGtB,OAFArB,QAAQC,IAAI,4BAA6BoB,GAGvC,gCACE,yCAECA,EAASC,KAAI,gBAAG7B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAAsBD,KAAMA,EAAMC,OAAQA,GAAxBF,UC0BX8B,E,4MAhCb/B,MAAQ,CACN6B,SAAU,I,EAGZf,SAAW,SAACkB,GACVxB,QAAQC,IAAI,eAAgBuB,GAE5B,IAAQ/B,EAAqB+B,EAArB/B,GAAIC,EAAiB8B,EAAjB9B,KAAMC,EAAW6B,EAAX7B,OAElBK,QAAQC,IAAI,aAAcR,GAC1BO,QAAQC,IAAI,eAAgBP,GAE5B,EAAK+B,WAAWhC,EAAIC,EAAMC,I,EAG5B8B,WAAa,SAAChC,EAAIC,EAAMC,GACtB,IAAM+B,EAAU,CAAEjC,KAAIC,OAAMC,UAC5B,EAAKO,UAAS,gBAAGmB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEK,GAAH,mBAAeL,S,4CAI3B,WACE,OACE,gCACE,cAAC,EAAD,CAAYf,SAAUK,KAAKL,WAC3B,cAAC,EAAD,CAAce,SAAUV,KAAKnB,MAAM6B,kB,GA3BzBJ,a,MCAlBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa9ff80a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = ({ title }) => <h2>{title}</h2>;\n\nexport default Title;\n","import React, { Component } from \"react\";\n\nconst shortid = require(\"shortid\");\n\nclass Form extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    // console.log(\"Form ~ e: \", e);\n    // console.log(\"Form ~ e: \", e.currentTarget);\n    const { name, value, id } = e.currentTarget;\n\n    console.log(\"Form ~ ID: \", id);\n\n    this.setState({ [name]: value, id: id });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ id: \"\", name: \"\", number: \"\" });\n  };\n\n  render() {\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\n\nimport Title from \"./Title\";\nimport Form from \"./Form\";\n\nclass Phoneboock extends Component {\n  render() {\n    return (\n      <>\n        <Title title=\"Phoneboock\" />\n        <Form onSubmit={this.props.onSubmit} />\n      </>\n    );\n  }\n}\n\nexport default Phoneboock;\n","import React from \"react\";\n\nconst ContactItem = ({ id, name, number }) => (\n  <li key={id}>\n    {name} {number}\n  </li>\n);\n\nexport default ContactItem;\n","import React from \"react\";\n\nimport ContactItem from \"./ContactItem\";\n\nconst ContactsList = ({ contacts }) => {\n  console.log(\"ContactsList ~ contacts: \", contacts);\n\n  return (\n    <div>\n      <p>Contacts</p>\n\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} />\n      ))}\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\n\nimport Phoneboock from \"./components/Phoneboock\";\nimport ContactsList from \"./components/ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n  };\n\n  onSubmit = (data) => {\n    console.log(\"App ~ data: \", data);\n\n    const { id, name, number } = data;\n\n    console.log(\"App ~ ID: \", id);\n    console.log(\"App ~ name: \", name);\n\n    this.addContact(id, name, number);\n  };\n\n  addContact = (id, name, number) => {\n    const contact = { id, name, number };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Phoneboock onSubmit={this.onSubmit} />\n        <ContactsList contacts={this.state.contacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}